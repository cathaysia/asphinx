[["getting-started/../user-guide/index.html",["\n\nUser Guide\n\nTable of Contents\n\nOverview\nContributing to Documentation\n\n\n\n\n\n\n\nComprehensive guide to using Asphinx for creating professional documentation sites.\n\n\n\n\nOverview\n\n\nThis user guide covers everything you need to know about using Asphinx effectively. Whether you’re creating simple documentation or complex multi-book sites, you’ll find the information you need here.\n\n\n\n\nContributing to Documentation\n\n\nHelp improve this documentation:\n\n\n\n\nReport issues or suggest improvements\n\n\nSubmit pull requests with corrections\n\n\nShare your use cases and examples\n\n\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","User Guide","2025-07-16 10:26:22"]],["getting-started/basic-usage.html",["\n\nBasic Usage\n\nTable of Contents\n\nCommand Line Interface\n\nBasic Command\nCommand Options\nExamples\n\n\nProject Structure\n\nStandard Layout\nContent Organization\n\nIndex Files\nCross-References\n\n\n\n\nContent Creation Workflow\n\n1. Plan Your Structure\n2. Create Directory Structure\n3. Write Content\n4. Build and Preview\n5. Iterate\n\n\nWorking with AsciiDoc\n\nBasic Syntax\n\nHeadings\nText Formatting\nLists\nCode Blocks\nTables\nAdmonitions\n\n\n\n\nBuild Process\n\nProcessing Steps\nPerformance Tips\n\nOptimize Images\nUse Caching\nParallel Processing\n\n\n\n\nDevelopment Workflow\n\nRecommended Setup\nTesting Your Documentation\n\nCheck Links\nValidate HTML\nTest Search\n\n\n\n\nTroubleshooting Common Issues\n\nBuild Failures\n\nAsciiDoctor Errors\nTheme Build Errors\n\n\nContent Issues\n\nBroken Cross-References\nMissing Images\n\n\nPerformance Issues\n\nSlow Builds\nLarge Output Size\n\n\n\n\nNext Steps\nGetting Help\n\n\n\n\n\n\n\nLearn the fundamental concepts and workflows of Asphinx.\n\n\n\n\nCommand Line Interface\n\n\nAsphinx provides a simple command-line interface for generating documentation sites.\n\n\nBasic Command\n\n\nasphinx --theme <theme-path>\n\n\n\n\nCommand Options\n\n\n\n\n\n\n\n\nOption\nDescription\nDefault\n\n\n\n\n--theme <PATH>\nPath to the theme directory\nRequired\n\n\n--minify\nEnable HTML minification for smaller file sizes\nDisabled\n\n\n--help\nShow help information\n-\n\n\n--version\nShow version information\n-\n\n\n\n\n\nExamples\n\n\n# Basic generation\nasphinx --theme theme\n\n# With minification (recommended for production)\nasphinx --theme theme --minify\n\n# Using a custom theme\nasphinx --theme /path/to/custom-theme\n\n# Show help\nasphinx --help\n\n\n\n\n\n\nProject Structure\n\n\nUnderstanding the project structure is key to using Asphinx effectively.\n\n\nStandard Layout\n\n\nmy-project/\n├── content/                 # Your AsciiDoc content\n│   ├── index.adoc          # Main entry point\n│   ├── section1/\n│   │   ├── index.adoc      # Section index\n│   │   ├── page1.adoc      # Content pages\n│   │   └── page2.adoc\n│   └── section2/\n│       └── ...\n├── theme/                   # Theme files\n│   ├── src/                # Theme source code\n│   ├── layouts/            # HTML templates\n│   └── assets/             # Static assets\n├── asphinx.toml            # Configuration file\n└── public/                 # Generated output (created by Asphinx)\n    ├── index.html\n    ├── section1/\n    └── assets/\n\n\n\n\nContent Organization\n\nIndex Files\n\nEvery directory should have an index.adoc file that serves as the entry point:\n\n\n\n= Section Title\n\nBrief description of this section.\n\n== Pages in This Section\n\n* xref:page1.adoc[Page 1 Title]\n* xref:page2.adoc[Page 2 Title]\n* xref:subsection/index.adoc[Subsection]\n\n\n\n\nCross-References\n\nUse xref: to link between pages:\n\n\n\n# Link to a page in the same directory\nxref:other-page.adoc[Link Text]\n\n# Link to a page in a subdirectory\nxref:subdirectory/page.adoc[Link Text]\n\n# Link to a page in a parent directory\nxref:../parent-page.adoc[Link Text]\n\n# Link to a specific section\nxref:page.adoc#section-id[Section Title]\n\n\n\n\n\n\n\nContent Creation Workflow\n\n\n1. Plan Your Structure\n\nBefore writing content, plan your documentation structure:\n\n\n\nDocumentation Plan:\n├── Getting Started\n│   ├── Installation\n│   ├── Quick Start\n│   └── Basic Concepts\n├── User Guide\n│   ├── Writing Content\n│   ├── Configuration\n│   └── Advanced Features\n└── Reference\n    ├── API Documentation\n    └── Configuration Options\n\n\n\n\n2. Create Directory Structure\n\n\nmkdir -p content/{getting-started,user-guide,reference}\ntouch content/index.adoc\ntouch content/getting-started/index.adoc\ntouch content/user-guide/index.adoc\ntouch content/reference/index.adoc\n\n\n\n\n3. Write Content\n\nStart with your main index file, then work on individual sections:\n\n\n\n= My Documentation\n:toc: left\n\nWelcome to my documentation.\n\n== Quick Navigation\n\n* xref:getting-started/index.adoc[Getting Started]\n* xref:user-guide/index.adoc[User Guide]\n* xref:reference/index.adoc[Reference]\n\n\n\n\n4. Build and Preview\n\n\n# Build the theme (if modified)\ncd theme && npm run build && cd ..\n\n# Generate the site\nasphinx --theme theme\n\n# Preview locally\ncd public && python -m http.server 8000\n\n\n\n\n5. Iterate\n\nRepeat the write-build-preview cycle until satisfied.\n\n\n\n\n\nWorking with AsciiDoc\n\n\nBasic Syntax\n\nHeadings\n\n\n= Document Title (Level 0)\n== Chapter Title (Level 1)\n=== Section Title (Level 2)\n==== Subsection Title (Level 3)\n===== Subsubsection Title (Level 4)\n\n\n\n\nText Formatting\n\n\n*bold text*\n_italic text_\n`monospace text`\n^superscript^\n~subscript~\n\n\n\n\nLists\n\n\n# Unordered list\n* Item 1\n* Item 2\n** Nested item\n** Another nested item\n\n# Ordered list\n. First item\n. Second item\n.. Nested numbered item\n.. Another nested numbered item\n\n# Definition list\nTerm 1:: Definition 1\nTerm 2:: Definition 2\n\n\n\n\nCode Blocks\n\n\n[source,javascript]\n\n\n\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\n\n\n\n\n\nTables\n\n\n[cols=\"1,2,1\"]\n|===\n|Column 1 |Column 2 |Column 3\n\n|Cell 1\n|Cell 2\n|Cell 3\n\n|Cell 4\n|Cell 5\n|Cell 6\n|===\n\n\n\n\nAdmonitions\n\n\nNOTE: This is a note.\n\nTIP: This is a tip.\n\nIMPORTANT: This is important information.\n\nCAUTION: This is a caution.\n\nWARNING: This is a warning.\n\n\n\n\n\n\n\nBuild Process\n\n\nUnderstanding how Asphinx processes your content helps optimize your workflow.\n\n\nProcessing Steps\n\n\n\nParse Index: Asphinx starts with content/index.adoc and follows xref: links\n\n\nGenerate HTML: Each .adoc file is converted to HTML using AsciiDoctor\n\n\nApply Theme: HTML is wrapped with the theme template\n\n\nCreate Search Index: Full-text search index is generated\n\n\nCopy Assets: Theme assets are copied to the output directory\n\n\nMinify (optional): HTML is minified if --minify flag is used\n\n\n\n\n\nPerformance Tips\n\nOptimize Images\n\n\n# Optimize images before adding to content\nconvert large-image.png -resize 800x600 optimized-image.png\n\n\n\n\nUse Caching\n\nAsphinx automatically caches processed content. To force a rebuild:\n\n\n\n# Clear cache and rebuild\nrm -rf .asphinx-cache\nasphinx --theme theme\n\n\n\n\nParallel Processing\n\nAsphinx processes files in parallel automatically. For large sites, ensure you have adequate system resources.\n\n\n\n\n\n\nDevelopment Workflow\n\n\nRecommended Setup\n\n\n\nUse Version Control\n\n\ngit init\ngit add .\ngit commit -m \"Initial documentation setup\"\n\n\n\n\nCreate Build Script\n\n\n#!/bin/bash\n# build.sh\nset -e\n\necho \"Building theme...\"\ncd theme\nnpm run build\ncd ..\n\necho \"Generating documentation...\"\nasphinx --theme theme --minify\n\necho \"Documentation built successfully!\"\necho \"Open public/index.html to view the site.\"\n\n\n\n\nSet Up Watch Mode (for development)\n\n\n#!/bin/bash\n# watch.sh\nwhile inotifywait -r -e modify content/ theme/src/; do\n    ./build.sh\ndone\n\n\n\n\n\n\n\nTesting Your Documentation\n\nCheck Links\n\nVerify all cross-references work:\n\n\n\n# Generate site\nasphinx --theme theme\n\n# Check for broken links (using a link checker tool)\nlinkchecker public/index.html\n\n\n\n\nValidate HTML\n\n\n# Install HTML validator\nnpm install -g html-validate\n\n# Validate generated HTML\nhtml-validate public/**/*.html\n\n\n\n\nTest Search\n\n\n\nGenerate the site with search index\n\n\nOpen in browser\n\n\nTest search functionality with various queries\n\n\n\n\n\n\n\n\nTroubleshooting Common Issues\n\n\nBuild Failures\n\nAsciiDoctor Errors\n\n\nError: asciidoctor: FAILED: missing converter for backend 'html5'\n\n\n\nSolution: Install required AsciiDoctor gems:\n\n\n\ngem install asciidoctor asciidoctor-diagram\n\n\n\n\nTheme Build Errors\n\n\nError: Cannot resolve module 'react'\n\n\n\nSolution: Install theme dependencies:\n\n\n\ncd theme\nrm -rf node_modules package-lock.json\nnpm install\n\n\n\n\n\nContent Issues\n\nBroken Cross-References\n\n\nWarning: invalid cross reference: nonexistent-page.adoc\n\n\n\nSolution: Check file paths and ensure referenced files exist.\n\n\n\nMissing Images\n\n\nWarning: image not found: images/missing.png\n\n\n\nSolution: Verify image paths relative to the .adoc file.\n\n\n\n\nPerformance Issues\n\nSlow Builds\n\nFor large documentation sites:\n\n\n\n\nUse --minify only for production builds\n\n\nOptimize images before adding them\n\n\nConsider splitting large files into smaller sections\n\n\n\n\n\nLarge Output Size\n\n\n\nEnable minification: --minify\n\n\nOptimize images\n\n\nRemove unused theme assets\n\n\n\n\n\n\n\n\nNext Steps\n\n\nNow that you understand the basics:\n\n\n\n\nLearn about Project Structure in detail\n\n\nExplore the User Guide for advanced features\n\n\nCheck out Configuration options\n\n\nTry Theme Development\n\n\n\n\n\n\nGetting Help\n\n\nIf you need assistance:\n\n\n\n\nReview the Troubleshooting Guide\n\n\nCheck the FAQ\n\n\nVisit our GitHub repository\n\n\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","Basic Usage","2025-07-16 10:26:22"]],["getting-started/index.html",["\n\nGetting Started\n\nTable of Contents\n\nTable of Contents\nPrerequisites\nSystem Requirements\nNext Steps\n\n\n\n\n\n\n\nThis guide will help you get up and running with Asphinx quickly.\n\n\n\n\nTable of Contents\n\n\n\n\nInstallation - How to install Asphinx\n\n\nQuick Start - Create your first documentation site\n\n\nBasic Usage - Learn the fundamentals\n\n\nProject Structure - Understanding the file organization\n\n\n\n\n\n\nPrerequisites\n\n\nBefore installing Asphinx, make sure you have:\n\n\n\n\nRust 1.70+: Required for building Asphinx\n\n\nNode.js 18+: Required for theme development\n\n\nAsciiDoctor: Required for document processing\n\n\nGit: For version control (recommended)\n\n\n\n\n\n\nSystem Requirements\n\n\nAsphinx runs on:\n\n\n\n\nLinux (Ubuntu 20.04+, Debian 10+, etc.)\n\n\nmacOS (10.15+)\n\n\nWindows (10+)\n\n\n\n\n\n\nNext Steps\n\n\n\n\nStart with Installation to set up Asphinx\n\n\nFollow the Quick Start guide to create your first site\n\n\nExplore the User Guide for advanced features\n\n\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","Getting Started","2025-07-16 10:26:22"]],["getting-started/installation.html",["\n\nInstallation\n\nTable of Contents\n\nPrerequisites\n\nRust\nNode.js\nAsciiDoctor\n\nUbuntu/Debian\nmacOS\nWindows\n\n\n\n\nInstallation Methods\n\nFrom Source (Recommended)\nUsing Cargo\n\n\nVerification\nPost-Installation Setup\n\nAdd to PATH\nShell Completion\n\n\nTroubleshooting\n\nCommon Issues\n\nRust Not Found\nAsciiDoctor Extensions Missing\nPermission Denied\n\n\nGetting Help\n\n\nNext Steps\n\n\n\n\n\n\n\nLearn how to install Asphinx on your system.\n\n\n\n\nPrerequisites\n\n\nBefore installing Asphinx, ensure you have the following dependencies:\n\n\nRust\n\nAsphinx is built with Rust, so you’ll need the Rust toolchain:\n\n\n\n# Install Rust using rustup\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nsource ~/.cargo/env\n\n# Verify installation\nrustc --version\ncargo --version\n\n\n\n\nNode.js\n\nNode.js is required for theme development and building:\n\n\n\n# Using Node Version Manager (recommended)\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\nnvm install 18\nnvm use 18\n\n# Verify installation\nnode --version\nnpm --version\n\n\n\n\nAsciiDoctor\n\nAsciiDoctor is required for processing AsciiDoc files:\n\n\nUbuntu/Debian\n\n\nsudo apt-get update\nsudo apt-get install -y asciidoctor\ngem install asciidoctor-mathematical asciidoctor-diagram\n\n\n\n\nmacOS\n\n\n# Using Homebrew\nbrew install asciidoctor\n\n# Install extensions\ngem install asciidoctor-mathematical asciidoctor-diagram\n\n\n\n\nWindows\n\n\n# Using Chocolatey\nchoco install ruby\ngem install asciidoctor asciidoctor-mathematical asciidoctor-diagram\n\n\n\n\n\n\n\nInstallation Methods\n\n\nFrom Source (Recommended)\n\nClone the repository and build from source:\n\n\n\n# Clone the repository\ngit clone https://github.com/your-username/asphinx.git\ncd asphinx\n\n# Build the project\ncargo build --release\n\n# The binary will be available at target/release/asphinx\n\n\n\n\nUsing Cargo\n\nInstall directly from crates.io (when available):\n\n\n\ncargo install asphinx\n\n\n\n\n\n\nVerification\n\n\nVerify your installation by running:\n\n\n\n# Check Asphinx version\n./target/release/asphinx --help\n\n# Or if installed via cargo\nasphinx --help\n\n\n\nYou should see output similar to:\n\n\n\nasphinx 0.1.0\nA modern AsciiDoc static site generator\n\nUSAGE:\n    asphinx [OPTIONS] --theme <THEME>\n\nOPTIONS:\n        --minify         Enable HTML minification\n        --theme <THEME>  Path to the theme directory\n    -h, --help           Print help information\n\n\n\n\n\nPost-Installation Setup\n\n\nAdd to PATH\n\nIf you built from source, you may want to add Asphinx to your PATH:\n\n\n\n# Add to ~/.bashrc or ~/.zshrc\nexport PATH=\"$PATH:/path/to/asphinx/target/release\"\n\n\n\n\nShell Completion\n\nGenerate shell completion scripts:\n\n\n\n# For Bash\nasphinx --generate-completion bash > ~/.local/share/bash-completion/completions/asphinx\n\n# For Zsh\nasphinx --generate-completion zsh > ~/.local/share/zsh/site-functions/_asphinx\n\n# For Fish\nasphinx --generate-completion fish > ~/.config/fish/completions/asphinx.fish\n\n\n\n\n\n\nTroubleshooting\n\n\nCommon Issues\n\nRust Not Found\n\nIf you get \"rustc not found\" error:\n\n\n\n# Reload your shell configuration\nsource ~/.cargo/env\n\n# Or restart your terminal\n\n\n\n\nAsciiDoctor Extensions Missing\n\nIf diagram generation fails:\n\n\n\n# Install missing extensions\ngem install asciidoctor-diagram asciidoctor-mathematical\n\n# For PlantUML support\nsudo apt-get install plantuml  # Ubuntu/Debian\nbrew install plantuml          # macOS\n\n\n\n\nPermission Denied\n\nIf you get permission errors:\n\n\n\n# Make the binary executable\nchmod +x target/release/asphinx\n\n# Or run with sudo for system-wide installation\nsudo cp target/release/asphinx /usr/local/bin/\n\n\n\n\n\nGetting Help\n\nIf you encounter issues not covered here:\n\n\n\n\nCheck the Troubleshooting Guide\n\n\nSearch existing GitHub Issues\n\n\nCreate a new issue with your system details and error messages\n\n\n\n\n\n\n\nNext Steps\n\n\nNow that Asphinx is installed, continue with the Quick Start guide to create your first documentation site.\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","Installation","2025-07-16 10:26:22"]],["getting-started/project-structure.html",["\n\nProject Structure\n\nTable of Contents\n\nOverview\nStandard Project Layout\nContent Directory Structure\n\nHierarchical Organization\nIndex Files\nFile Naming Conventions\n\n\nAsset Management\n\nImages\nOther Assets\n\n\nTheme Structure\n\nSource Files\nBuild Output\n\n\nConfiguration Files\n\nMain Configuration\nGit Configuration\n\n\nScaling Large Projects\n\nMulti-Book Structure\nModular Themes\n\n\nBest Practices\n\nContent Organization\nAsset Management\nTheme Development\n\n\nMigration Strategies\n\nFrom Other Tools\n\nFrom GitBook\nFrom Sphinx\n\n\nRestructuring Existing Projects\n\n\nTroubleshooting Structure Issues\n\nCommon Problems\n\nBroken Cross-References\nMissing Index Files\nAsset Path Issues\n\n\n\n\nNext Steps\nGetting Help\n\n\n\n\n\n\n\nUnderstanding how to organize your Asphinx project for maximum efficiency and maintainability.\n\n\n\n\nOverview\n\n\nA well-organized project structure is crucial for maintaining large documentation sites. Asphinx follows conventions that make your content easy to navigate and maintain.\n\n\n\n\nStandard Project Layout\n\n\n\nmy-project/\n├── content/                    # Documentation content\n│   ├── index.adoc             # Main entry point\n│   ├── getting-started/       # Getting started section\n│   │   ├── index.adoc\n│   │   ├── installation.adoc\n│   │   └── quick-start.adoc\n│   ├── user-guide/           # User guide section\n│   │   ├── index.adoc\n│   │   ├── basic-concepts.adoc\n│   │   └── advanced-features.adoc\n│   ├── reference/            # Reference documentation\n│   │   ├── index.adoc\n│   │   ├── api/\n│   │   └── configuration/\n│   └── assets/               # Shared assets\n│       ├── images/\n│       └── files/\n├── theme/                     # Theme files\n│   ├── src/                  # Theme source code\n│   │   ├── main.tsx\n│   │   ├── style.css\n│   │   └── components/\n│   ├── layouts/              # HTML templates\n│   │   └── page.html\n│   ├── assets/               # Theme assets\n│   └── package.json\n├── asphinx.toml              # Configuration file\n├── .gitignore                # Git ignore rules\n└── public/                   # Generated output (auto-created)\n    ├── index.html\n    ├── getting-started/\n    ├── user-guide/\n    ├── reference/\n    ├── assets/\n    └── cache.json\n\n\n\n\n\nContent Directory Structure\n\n\nHierarchical Organization\n\nOrganize content hierarchically to reflect your documentation structure:\n\n\n\ncontent/\n├── index.adoc                 # Root index\n├── section1/\n│   ├── index.adoc            # Section index\n│   ├── topic1.adoc           # Individual topics\n│   ├── topic2.adoc\n│   └── subsection/\n│       ├── index.adoc        # Subsection index\n│       └── subtopic.adoc\n└── section2/\n    ├── index.adoc\n    └── ...\n\n\n\n\nIndex Files\n\nEvery directory should contain an index.adoc file that:\n\n\n\n\nIntroduces the section\n\n\nLists and links to subsections\n\n\nProvides navigation context\n\n\n\n\nExample section index:\n\n\n\n= User Guide\n:toc: left\n\nThis section covers everything you need to know about using our software.\n\n== Getting Started\n\n* xref:installation.adoc[Installation Guide]\n* xref:first-steps.adoc[First Steps]\n* xref:basic-concepts.adoc[Basic Concepts]\n\n== Advanced Topics\n\n* xref:advanced-features.adoc[Advanced Features]\n* xref:customization.adoc[Customization]\n* xref:troubleshooting.adoc[Troubleshooting]\n\n== Reference\n\n* xref:../reference/api/index.adoc[API Reference]\n* xref:../reference/configuration/index.adoc[Configuration Reference]\n\n\n\n\nFile Naming Conventions\n\nUse consistent, descriptive file names:\n\n\n\n\n\n\n\n\n\nPattern\nExample\nPurpose\n\n\n\n\nindex.adoc\nuser-guide/index.adoc\nSection entry points\n\n\nkebab-case.adoc\ngetting-started.adoc\nRegular content pages\n\n\nnoun-verb.adoc\ndatabase-setup.adoc\nTask-oriented pages\n\n\nconcept-name.adoc\nuser-management.adoc\nConceptual topics\n\n\n\n\n\n\n\nAsset Management\n\n\nImages\n\nOrganize images logically:\n\n\n\ncontent/\n├── assets/\n│   └── images/\n│       ├── common/           # Shared images\n│       │   ├── logo.png\n│       │   └── icons/\n│       ├── getting-started/  # Section-specific images\n│       │   ├── installation-screen.png\n│       │   └── setup-wizard.png\n│       └── user-guide/\n│           ├── dashboard.png\n│           └── settings.png\n\n\n\nReference images using relative paths:\n\n\n\n# From content/getting-started/installation.adoc\nimage::../assets/images/getting-started/installation-screen.png[Installation Screen]\n\n# From content/user-guide/dashboard.adoc\nimage::../assets/images/user-guide/dashboard.png[Dashboard Overview]\n\n\n\n\nOther Assets\n\nStore downloadable files and resources:\n\n\n\ncontent/\n└── assets/\n    ├── files/\n    │   ├── sample-config.toml\n    │   ├── templates/\n    │   └── examples/\n    └── downloads/\n        ├── software-v1.0.zip\n        └── documentation.pdf\n\n\n\n\n\n\nTheme Structure\n\n\nSource Files\n\n\ntheme/\n├── src/\n│   ├── main.tsx              # React entry point\n│   ├── style.css             # Global styles\n│   ├── search-bar.tsx        # Search component\n│   ├── components/           # Reusable components\n│   │   ├── ui/              # UI primitives\n│   │   └── layout/          # Layout components\n│   └── lib/                 # Utility functions\n├── layouts/\n│   └── page.html            # HTML template\n├── assets/                  # Static assets\n│   ├── fonts/\n│   ├── images/\n│   └── icons/\n├── package.json             # Node.js dependencies\n└── vite.config.ts          # Build configuration\n\n\n\n\nBuild Output\n\nAfter building the theme:\n\n\n\ntheme/\n├── dist/                    # Built theme files\n│   ├── assets/\n│   │   ├── main.js\n│   │   ├── style.css\n│   │   └── ...\n│   └── layouts/\n│       └── page.html\n\n\n\n\n\n\nConfiguration Files\n\n\nMain Configuration\n\nasphinx.toml contains project-wide settings:\n\n\n\n# Project configuration\nno_default = false\n\n[asciidoc]\nextensions = [\"asciidoctor-diagram\", \"asciidoctor-mathematical\"]\n\n[asciidoc.attributes]\nicons = \"font\"\ntoc = 1\nexperimental = \"\"\nsource-highlighter = \"pygments\"\nsectanchors = \"\"\nsectlinks = \"\"\n\n# Diagram formats\nplantuml-format = \"svg\"\nmermaid-format = \"svg\"\ngraphviz-format = \"svg\"\n\n\n\n\nGit Configuration\n\n.gitignore should exclude generated files:\n\n\n\n# Generated output\npublic/\n.asphinx-cache/\n\n# Theme build artifacts\ntheme/dist/\ntheme/node_modules/\ntheme/.vite/\n\n# System files\n.DS_Store\nThumbs.db\n\n# Editor files\n.vscode/\n.idea/\n*.swp\n*.swo\n\n\n\n\n\n\nScaling Large Projects\n\n\nMulti-Book Structure\n\nFor large projects with multiple books or products:\n\n\n\ncontent/\n├── index.adoc               # Main landing page\n├── product-a/\n│   ├── index.adoc\n│   ├── user-guide/\n│   ├── admin-guide/\n│   └── api-reference/\n├── product-b/\n│   ├── index.adoc\n│   ├── getting-started/\n│   └── tutorials/\n└── shared/\n    ├── glossary.adoc\n    ├── legal/\n    └── assets/\n\n\n\n\nModular Themes\n\nFor different sections requiring different styling:\n\n\n\nthemes/\n├── default/                 # Main theme\n├── api-docs/               # API documentation theme\n└── tutorials/              # Tutorial-specific theme\n\n\n\nBuild with different themes:\n\n\n\n# Build main documentation\nasphinx --theme themes/default\n\n# Build API docs with specialized theme\nasphinx --theme themes/api-docs\n\n\n\n\n\n\nBest Practices\n\n\nContent Organization\n\n\n\nGroup Related Content: Keep related topics in the same directory\n\n\nUse Descriptive Names: File and directory names should be self-explanatory\n\n\nMaintain Consistent Depth: Avoid deeply nested structures (max 3-4 levels)\n\n\nCreate Clear Navigation: Every section should have a clear index page\n\n\n\n\n\nAsset Management\n\n\n\nOptimize Images: Compress images before adding them\n\n\nUse Consistent Naming: Follow naming conventions for assets\n\n\nOrganize by Section: Group assets by the content that uses them\n\n\nVersion Control: Include assets in version control\n\n\n\n\n\nTheme Development\n\n\n\nSeparate Concerns: Keep styling, logic, and templates separate\n\n\nUse Build Tools: Leverage modern build tools for optimization\n\n\nTest Responsiveness: Ensure themes work on all device sizes\n\n\nDocument Customizations: Document any theme modifications\n\n\n\n\n\n\n\nMigration Strategies\n\n\nFrom Other Tools\n\nFrom GitBook\n\n\n# Convert GitBook structure\nmkdir -p content\ncp -r gitbook-content/* content/\n# Rename .md files to .adoc and convert syntax\nfind content -name \"*.md\" -exec rename 's/\\.md$/.adoc/' {} \\;\n\n\n\n\nFrom Sphinx\n\n\n# Convert reStructuredText to AsciiDoc\npip install pandoc\nfind source -name \"*.rst\" -exec pandoc -f rst -t asciidoc {} -o content/{}.adoc \\;\n\n\n\n\n\nRestructuring Existing Projects\n\n\n\nPlan the New Structure: Design the target structure\n\n\nCreate Migration Script: Automate file moves and updates\n\n\nUpdate Cross-References: Fix all xref: links\n\n\nTest Thoroughly: Verify all links and assets work\n\n\n\n\nExample migration script:\n\n\n\n#!/bin/bash\n# migrate.sh\n\n# Create new structure\nmkdir -p content/{getting-started,user-guide,reference}\n\n# Move files\nmv old-docs/installation.adoc content/getting-started/\nmv old-docs/user-manual.adoc content/user-guide/index.adoc\n\n# Update cross-references\nsed -i 's/xref:installation.adoc/xref:getting-started\\/installation.adoc/g' content/**/*.adoc\n\necho \"Migration complete. Please review and test.\"\n\n\n\n\n\n\nTroubleshooting Structure Issues\n\n\nCommon Problems\n\nBroken Cross-References\n\nProblem: Links don’t work after restructuring\n\n\nSolution: Use relative paths consistently:\n\n\n\n# Good: relative to current file\nxref:../user-guide/basics.adoc[Basics]\n\n# Bad: absolute paths\nxref:/user-guide/basics.adoc[Basics]\n\n\n\n\nMissing Index Files\n\nProblem: Directories without index files cause navigation issues\n\n\nSolution: Ensure every directory has an index.adoc:\n\n\n\n# Find directories without index files\nfind content -type d -exec test ! -f {}/index.adoc \\; -print\n\n# Create missing index files\nfor dir in $(find content -type d -exec test ! -f {}/index.adoc \\; -print); do\n    echo \"= $(basename $dir | tr '-' ' ' | title)\" > \"$dir/index.adoc\"\ndone\n\n\n\n\nAsset Path Issues\n\nProblem: Images or files not found\n\n\nSolution: Verify paths relative to the .adoc file:\n\n\n\n# Check for missing assets\ngrep -r \"image::\" content/ | while read line; do\n    file=$(echo $line | cut -d: -f1)\n    asset=$(echo $line | sed 's/.*image::\\([^[]*\\).*/\\1/')\n    if [ ! -f \"$(dirname $file)/$asset\" ]; then\n        echo \"Missing: $asset in $file\"\n    fi\ndone\n\n\n\n\n\n\n\nNext Steps\n\n\nNow that you understand project structure:\n\n\n\n\nLearn about Writing Content\n\n\nExplore Configuration Options\n\n\nCheck out Theme Development\n\n\n\n\n\n\nGetting Help\n\n\nFor structure-related questions:\n\n\n\n\nReview the Troubleshooting Guide\n\n\nCheck our GitHub Discussions\n\n\nLook at example projects in our Examples Repository\n\n\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","Project Structure","2025-07-16 10:26:22"]],["getting-started/quick-start.html",["\n\nQuick Start\n\nTable of Contents\n\nCreate Your First Site\n\nStep 1: Create Project Directory\nStep 2: Initialize Project Structure\nStep 3: Create Main Index File\nStep 4: Create Sample Content\nStep 5: Configure Asphinx\nStep 6: Set Up Theme\nStep 7: Generate Your Site\nStep 8: Preview Your Site\n\n\nUnderstanding the Output\nNext Steps\n\nLearn More About Content\nCustomize Your Site\nAdvanced Features\n\n\nCommon Next Actions\n\nAdd More Content\nCustomize Styling\nSet Up Automatic Building\n\n\nTroubleshooting\n\nTheme Build Fails\nMissing Dependencies\nPermission Issues\n\n\nGetting Help\n\n\n\n\n\n\n\nGet your first Asphinx documentation site up and running in minutes.\n\n\n\n\nCreate Your First Site\n\n\nStep 1: Create Project Directory\n\n\nmkdir my-docs\ncd my-docs\n\n\n\n\nStep 2: Initialize Project Structure\n\nCreate the basic directory structure:\n\n\n\nmkdir -p content/{getting-started,user-guide}\nmkdir -p theme\ntouch asphinx.toml\n\n\n\nYour project structure should look like:\n\n\n\nmy-docs/\n├── content/\n│   ├── index.adoc\n│   ├── getting-started/\n│   └── user-guide/\n├── theme/\n└── asphinx.toml\n\n\n\n\nStep 3: Create Main Index File\n\nCreate content/index.adoc:\n\n\n\n= My Documentation Site\n:toc: left\n:sectanchors:\n:sectlinks:\n\nWelcome to my documentation site built with Asphinx!\n\n== Getting Started\n\n* xref:getting-started/installation.adoc[Installation Guide]\n* xref:getting-started/basic-usage.adoc[Basic Usage]\n\n== User Guide\n\n* xref:user-guide/writing-content.adoc[Writing Content]\n* xref:user-guide/configuration.adoc[Configuration]\n\n== About\n\nThis site was generated using https://github.com/your-username/asphinx[Asphinx],\na modern AsciiDoc static site generator.\n\n\n\n\nStep 4: Create Sample Content\n\nCreate content/getting-started/installation.adoc:\n\n\n\n= Installation Guide\n\nThis guide will help you install the software.\n\n== Prerequisites\n\nBefore you begin, ensure you have:\n\n* A computer\n* Internet connection\n* Basic command line knowledge\n\n== Installation Steps\n\n. Download the software\n. Extract the archive\n. Run the installer\n. Follow the setup wizard\n\n== Verification\n\nTo verify the installation:\n\n[source,bash]\n\n\n\nsoftware --version\n\n\n\nYou should see version information displayed.\n\n\n\n\nStep 5: Configure Asphinx\n\nCreate asphinx.toml:\n\n\n\n# Asphinx Configuration\nno_default = false\n\n[asciidoc]\nextensions = [\"asciidoctor-diagram\"]\n\n[asciidoc.attributes]\nicons = \"font\"\ntoc = 1\nexperimental = \"\"\nsource-highlighter = \"pygments\"\nsectanchors = \"\"\nsectlinks = \"\"\n\n\n\n\nStep 6: Set Up Theme\n\nClone or copy the default theme:\n\n\n\n# If you have the Asphinx repository\ncp -r /path/to/asphinx/theme/* theme/\n\n# Or create a minimal theme structure\nmkdir -p theme/{src,layouts}\n\n\n\nBuild the theme:\n\n\n\ncd theme\nnpm install\nnpm run build\ncd ..\n\n\n\n\nStep 7: Generate Your Site\n\nRun Asphinx to generate your documentation site:\n\n\n\nasphinx --theme theme\n\n\n\nThis will:\n\n\n\n\nParse your AsciiDoc files\n\n\nGenerate HTML pages\n\n\nApply the theme\n\n\nCreate a searchable index\n\n\nOutput everything to the public/ directory\n\n\n\n\n\nStep 8: Preview Your Site\n\nOpen the generated site in your browser:\n\n\n\n# On macOS\nopen public/index.html\n\n# On Linux\nxdg-open public/index.html\n\n# On Windows\nstart public/index.html\n\n# Or use a local server\ncd public\npython -m http.server 8000\n# Then visit http://localhost:8000\n\n\n\n\n\n\nUnderstanding the Output\n\n\nAfter running Asphinx, you’ll find:\n\n\n\npublic/\n├── index.html              # Main page\n├── getting-started/\n│   └── installation.html   # Generated from .adoc files\n├── assets/                 # Theme assets (CSS, JS, images)\n├── cache.json             # Search index\n└── ...                    # Other generated files\n\n\n\n\n\nNext Steps\n\n\nCongratulations! You’ve created your first Asphinx site. Here’s what to explore next:\n\n\nLearn More About Content\n\n\n\nWriting Content - Learn AsciiDoc syntax\n\n\nOrganizing Content - Structure your documentation\n\n\nCross References - Link between pages\n\n\n\n\n\nCustomize Your Site\n\n\n\nConfiguration - Customize Asphinx behavior\n\n\nTheme Development - Create custom themes\n\n\nManaging Assets - Add images and files\n\n\n\n\n\nAdvanced Features\n\n\n\nDiagrams - Add PlantUML, Mermaid diagrams\n\n\nMathematical Expressions - Include LaTeX math\n\n\nSearch Configuration - Customize search behavior\n\n\n\n\n\n\n\nCommon Next Actions\n\n\nAdd More Content\n\nCreate additional pages by adding .adoc files to your content directory:\n\n\n\n# Create a new section\nmkdir content/tutorials\ntouch content/tutorials/index.adoc\ntouch content/tutorials/first-tutorial.adoc\n\n\n\nRemember to link to new pages from your main index or section indexes.\n\n\n\nCustomize Styling\n\nModify the theme to match your brand:\n\n\n\ncd theme\n# Edit src/style.css for custom styles\n# Modify src/main.tsx for React components\nnpm run build\ncd ..\nasphinx --theme theme\n\n\n\n\nSet Up Automatic Building\n\nCreate a build script for easier regeneration:\n\n\n\n#!/bin/bash\n# build.sh\ncd theme\nnpm run build\ncd ..\nasphinx --theme theme --minify\necho \"Site built successfully!\"\n\n\n\nMake it executable:\n\n\n\nchmod +x build.sh\n./build.sh\n\n\n\n\n\n\nTroubleshooting\n\n\nTheme Build Fails\n\nIf the theme build fails:\n\n\n\ncd theme\nrm -rf node_modules package-lock.json\nnpm install\nnpm run build\n\n\n\n\nMissing Dependencies\n\nIf you get errors about missing AsciiDoctor extensions:\n\n\n\ngem install asciidoctor-diagram asciidoctor-mathematical\n\n\n\n\nPermission Issues\n\nIf you get permission errors:\n\n\n\n# Make sure you have write permissions\nchmod -R u+w .\n\n# Or run with appropriate permissions\nsudo asphinx --theme theme\n\n\n\n\n\n\nGetting Help\n\n\nIf you need help:\n\n\n\n\nCheck the Troubleshooting Guide\n\n\nReview the FAQ\n\n\nVisit our GitHub repository\n\n\n\n\nReady to dive deeper? Continue with the Basic Usage guide.\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","Quick Start","2025-07-16 10:26:22"]],["index.html",["\n\nAsphinx Documentation\n\nTable of Contents\n\nOverview\nKey Features\nQuick Navigation\n\n\n\n\n\n\n\nWelcome to Asphinx, a modern AsciiDoc static site generator designed for technical documentation and books.\n\n\n\n\nOverview\n\n\nAsphinx is a high-performance static site generator built with Rust that transforms AsciiDoc documents into beautiful, searchable websites. It combines the power of AsciiDoc with modern web technologies to create fast, responsive documentation sites.\n\n\n\n\nKey Features\n\n\n\n\n🚀 High Performance: Built with Rust for maximum speed and efficiency\n\n\n📚 Full AsciiDoc Support: Complete support for AsciiDoc syntax and extensions\n\n\n🎨 Modern Theme: Responsive design with React and Tailwind CSS\n\n\n🔍 Built-in Search: Full-text search functionality\n\n\n📊 Rich Diagrams: Support for PlantUML, Mermaid, Graphviz, and more\n\n\n⚡ Fast Builds: Intelligent caching and parallel processing\n\n\n🌐 SEO Optimized: Clean HTML output optimized for search engines\n\n\n\n\n\n\nQuick Navigation\n\n\n\n\nGetting Started - Installation and basic usage\n\n\nUser Guide - Comprehensive usage documentation\n\n\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","Asphinx Documentation","2025-07-16 10:26:22"]],["user-guide/index.html",["\n\nUser Guide\n\nTable of Contents\n\nOverview\nContributing to Documentation\n\n\n\n\n\n\n\nComprehensive guide to using Asphinx for creating professional documentation sites.\n\n\n\n\nOverview\n\n\nThis user guide covers everything you need to know about using Asphinx effectively. Whether you’re creating simple documentation or complex multi-book sites, you’ll find the information you need here.\n\n\n\n\nContributing to Documentation\n\n\nHelp improve this documentation:\n\n\n\n\nReport issues or suggest improvements\n\n\nSubmit pull requests with corrections\n\n\nShare your use cases and examples\n\n\n\n\n\n\n\n\nLast updated 1980-01-01 00:00:00 UTC\n\n\n\n\n","User Guide","2025-07-16 10:26:22"]]]